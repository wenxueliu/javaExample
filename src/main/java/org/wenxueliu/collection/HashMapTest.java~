//
//第一种:
//Map map = new HashMap();
//Iterator iter = map.entrySet().iterator();
//while (iter.hasNext()) {
//    Map.Entry entry = (Map.Entry) iter.next();
//    Object key = entry.getKey();
//    Object val = entry.getValue();
//}
//效率高,以后一定要使用此种方式！
//第二种:
//Map map = new HashMap();
//Iterator iter = map.keySet().iterator();
//while (iter.hasNext()) {
//    Object key = iter.next();
//    Object val = map.get(key);
//}
//效率低,以后尽量少使用！ 

import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Iterator;

public class HashMapTest {
    public static void main(String[] args) {
        HashMap<String, String> hashmap = new HashMap<String, String>();
        for (int i = 0; i < 1000; i++) {
            hashmap.put(String.valueOf(i),"thanks");
        }
    }

    public void listByEntry(HashMap<String, String> hashmap) {
        long bs = Calendar.getInstance().getTimeInMillis();
        Iterator<String> iterator = hashmap.keySet().iterator();
        while (iterator.hasNext()) {
            System.out.print(hashmap.get(iterator.next()));
        }
        System.out.println();
        System.out.println(Calendar.getInstance().getTimeInMillis() - bs);
    }

    public void listByKey(HashMap<String, String> hashmap) {
        long bs = Calendar.getInstance().getTimeInMillis();
        Iterator<Map.Entry<String, String>> it = hashmap.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry<String, String> entry =  it.next();
            System.out.print(entry.getValue());
        }
        System.out.println(Calendar.getInstance().getTimeInMillis() - bs);
    }
}

//对于keySet其实是遍历了2次，一次是转为iterator，一次就从hashmap中取出key所对于的value。
//而entryset只是遍历了第一次，他把key和value都放到了entry中，所以就快了。 
